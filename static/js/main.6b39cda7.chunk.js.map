{"version":3,"sources":["components/CityBtn.js","components/Cities.js","components/RequestError.js","components/Loader.js","components/WeatherDisplay.js","components/AddCity.js","App.js","index.js"],"names":["CityBtn","state","deleteBtn","hadleClick","e","props","onCityClick","target","handleDeleteBtnClick","preventDefault","onDeleteBtnClick","handleMouseEnter","setState","handleMouseLeave","this","id","name","activeCityId","className","onMouseEnter","onMouseLeave","onClick","React","Component","Cities","onDeleteCityBtnClick","data","map","element","key","city","RequestError","errStatus","errGeo","activeCity","code","message","Loader","WeatherDisplay","fetchData","bind","weatherData","err","loading","URL","fetch","then","response","ok","json","status","catch","console","warn","weatherDataByGeo","prevProps","weather","weatherIcon","icon","main","src","alt","description","title","temp","feels_like","wind","speed","pressure","toFixed","humidity","coord","lat","lon","sys","country","AddCity","type","onChange","value","placeholder","onKeyDown","onLocationClick","searchErr","CITIES","App","handleCityClick","handleInputChange","handleSearchBtn","handleDeleteCityBtnClick","handleLocationClick","validate","fetchDataByGeo","geoLocation","cities","latitude","longitude","log","navigator","geolocation","getCurrentPosition","position","coords","alert","i","length","trim","input","slice","toUpperCase","toLowerCase","event","validateResult","citiesClone","newCity","push","splice","prevState","duplicate","forEach","item","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b39cda7.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nclass CityBtn extends React.Component {\r\n  state = {\r\n    deleteBtn: null\r\n  }\r\n\r\n  hadleClick = (e) => {\r\n   this.props.onCityClick(e.target);\r\n  }\r\n\r\n  handleDeleteBtnClick = (e) => {\r\n    e.preventDefault();\r\n    this.props.onDeleteBtnClick(e.target);\r\n  }\r\n\r\n  handleMouseEnter = (e) => {\r\n    this.setState({deleteBtn: true});\r\n  }\r\n\r\n  handleMouseLeave = (e) => {\r\n    this.setState({deleteBtn: false});\r\n  }\r\n\r\n  render () {\r\n    const {deleteBtn} = this.state;\r\n    const {id, name} = this.props;\r\n    const activeCityId = +this.props.activeCityId;\r\n    return (\r\n      activeCityId === id ?\r\n        <div className=\"city-wrapper city__active\" onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\r\n          <div id={id} className=\"city\" onClick={this.hadleClick}>\r\n            {name}\r\n          </div>\r\n          {deleteBtn && <button id={id} className=\"delete-city\" onClick={this.handleDeleteBtnClick}>Удалить</button>}\r\n        </div>\r\n        :\r\n        <div className=\"city-wrapper\" onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\r\n          <div id={id} className=\"city\" onClick={this.hadleClick}>\r\n            {name}\r\n          </div>\r\n          {deleteBtn && <button id={id} className=\"delete-city\" onClick={this.handleDeleteBtnClick}>Удалить</button>}\r\n        </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport {CityBtn};","import React from 'react';\r\nimport {CityBtn} from './CityBtn';\r\nimport '../App.css';\r\n\r\nfunction Cities(props){\r\n\r\n  function handleDeleteBtnClick(deleteBtn) {\r\n    props.onDeleteCityBtnClick(deleteBtn);\r\n  }\r\n\r\n  \r\n  const {data, onCityClick, activeCityId} = props;\r\n\r\n  return (\r\n    <div className=\"cities-wrapper\">\r\n      <h2 className=\"cities-wrapper__label\">Выберите город</h2>\r\n      <div className=\"cities\">\r\n        {data.map(element => \r\n            <CityBtn \r\n              key={element.id} \r\n              id={element.id}\r\n              name={element.city}\r\n              onCityClick={onCityClick}\r\n              onDeleteBtnClick={handleDeleteBtnClick}\r\n              activeCityId={activeCityId}\r\n            />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport {Cities};","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction RequestError(props) {\r\n const errStatus = +props.errStatus;\r\n const errGeo = props.errGeo;\r\n const activeCity = props.activeCity;\r\n  return (\r\n    <div className=\"weather-display\">\r\n      <div className=\"weather-display__error\">\r\n        <h2>Ошибка!</h2>\r\n        {\r\n          (errStatus >= 400 && errStatus < 500)  &&  \r\n          <p>\r\n            Ошибка {errStatus} (Not Found).Город <span className='weather-display__error-city'>{activeCity}</span> не найден в базе.<br/>\r\n            Попробуйте ввести название на английском или попробуйте изменить поисковый запрос\r\n          </p>\r\n        }\r\n        {\r\n          (errStatus >= 500 && errStatus < 600)  && \r\n          <p>Сервер не отвечает, ошибка {errStatus}. Попробуйте позже.</p>\r\n        }\r\n        {\r\n          errGeo && \r\n          <p>\r\n            Произошла ошибка при запросе данных о местоположении.<br/>\r\n            Попробуйте повторить позже или можете ввести название города\r\n            в строку поиска.<br/><hr/>\r\n            Ошибка: {errGeo.code}. {errGeo.message}\r\n          </p>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {RequestError};","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Loader(props) {\r\n  return (\r\n    <div className=\"weather-display\">\r\n      <div className=\"load-5\">\r\n        <div className=\"ring-2\">\r\n          <div className=\"ball-holder\">\r\n            <div className=\"ball\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Loader};","import React from 'react';\r\nimport {RequestError} from './RequestError';\r\nimport {Loader} from './Loader';\r\nimport '../App.css';\r\n\r\nclass WeatherDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fetchData = this.fetchData.bind(this);\r\n    this.state = {\r\n      weatherData: null,\r\n      err: null,\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  fetchData(activeCity) {\r\n    const APPID = 'ef598dd48091a3a2eb6a63ef6c4d75b2'\r\n    const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + \r\n                activeCity + `&units=metric&lang=ru&APPID=${APPID}`;\r\n\r\n    this.setState({loading: true});\r\n\r\n    fetch(URL).then(response => {\r\n      if (response.ok) {\r\n        return response.json(); \r\n      } else {\r\n        throw response.status\r\n      }\r\n    })\r\n    .then(data => {\r\n      this.setState({\r\n        weatherData: data,\r\n        loading: false,\r\n        err: null\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.warn('Данные не были получены, ошибка: ' + err);\r\n      this.setState({\r\n        err: err\r\n      })\r\n    }) \r\n  }\r\n\r\n  componentDidMount() {\r\n    const {activeCity,weatherDataByGeo} = this.props;\r\n    \r\n    weatherDataByGeo ? \r\n    weatherDataByGeo && this.setState({weatherData: weatherDataByGeo, loading: false}) :\r\n    this.fetchData(activeCity);    \r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {activeCity, weatherDataByGeo} = this.props;\r\n    \r\n    prevProps.activeCity !== activeCity && this.fetchData(activeCity);\r\n    prevProps.weatherDataByGeo !== weatherDataByGeo && this.setState({weatherData: weatherDataByGeo, loading: false});\r\n  }\r\n\r\n  render() {\r\n    const {weatherData, err, loading} = this.state;\r\n    const {activeCity} = this.props;\r\n    \r\n    if (err) return <RequestError errStatus={err} activeCity={activeCity}/>;\r\n    else if (loading) return <Loader/>;\r\n\r\n    const weather = weatherData.weather[0];\r\n    const weatherIcon = `https://openweathermap.org/img/wn/${weather.icon}.png`\r\n    \r\n    return (\r\n      <div className=\"weather-display\">\r\n        <h2 className=\"city-status\">\r\n          {`${weather.main} in ${weatherData.name}`}\r\n          <img \r\n            src={weatherIcon} \r\n            alt={weather.description} \r\n            title={weather.description}/>  \r\n        </h2>\r\n        <div className=\"weather-info\">\r\n          <p className=\"weather-info__item\">Температура: {weatherData.main.temp}°</p>\r\n          <p className=\"weather-info__item\">По ощущению: {weatherData.main.feels_like}°</p>\r\n          <p className=\"weather-info__item\">Ветер: {weatherData.wind.speed} м/с</p>\r\n          <p className=\"weather-info__item\">Статус: {weather.description}</p>\r\n          <p className=\"weather-info__item\">Давление: {(weatherData.main.pressure *  0.75006375541921).toFixed(2)} мм рт. ст.</p>\r\n          <p className=\"weather-info__item\">Влажность: {weatherData.main.humidity}%</p>\r\n          <p className=\"weather-info__item\">Координаты: {`[${weatherData.coord.lat}, ${weatherData.coord.lon}]; ${weatherData.sys.country}`}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport {WeatherDisplay}","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction AddCity(props) {\r\n  function handleChange(e) {\r\n    e.preventDefault();\r\n    props.onChange(e.target);\r\n  }\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    props.onClick(e);\r\n  }\r\n\r\n  function handleKeyDown(e) {\r\n    props.onKeyDown(e);\r\n  }\r\n\r\n  function handleLocationClick(e) {\r\n    props.onLocationClick(e);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-wrapper\">\r\n      <div className=\"search\">\r\n        <input \r\n          type=\"text\" \r\n          className=\"search_input\"\r\n          onChange={handleChange}\r\n          value={props.value}\r\n          placeholder=\"Погода в вашем городе...\"\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <button id=\"searchBtn\" className=\"search_btn\" onClick={handleClick}></button>\r\n        <span className=\"search_location\" onClick={handleLocationClick}>\r\n          <img className=\"search_location-img\" src=\"https://img.icons8.com/color/48/000000/gps-device.png\" alt='GPS'/>\r\n          Моё местоположение\r\n        </span>\r\n\t\t  </div>\r\n    {props.searchErr === 'no value' && <div className=\"search-err-message\"><span>Необходимо ввестиназвание города</span></div>}\r\n    {props.searchErr === 'duplicate' && <div className=\"search-err-message\"><span>Данный город уже был добавлен ранее</span></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {AddCity};","import React from 'react';\r\nimport {Cities} from './components/Cities';\r\nimport {WeatherDisplay} from './components/WeatherDisplay';\r\nimport {AddCity} from './components/AddCity';\r\nimport { Loader } from './components/Loader';\r\nimport './App.css'\r\nimport { RequestError } from './components/RequestError';\r\n\r\n// import { CityBtn } from './components/CityBtn';\r\n\r\nlet CITIES = [\r\n  {\r\n    \"id\": 1,\r\n    \"city\": \"New York\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"city\": \"London\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"city\": \"Tokyo\"\r\n  }\r\n]\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleCityClick = this.handleCityClick.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSearchBtn = this.handleSearchBtn.bind(this);\r\n    this.handleDeleteCityBtnClick = this.handleDeleteCityBtnClick.bind(this);\r\n    this.handleLocationClick = this.handleLocationClick.bind(this);\r\n    this.validate = this.validate.bind(this);\r\n    this.fetchDataByGeo = this.fetchDataByGeo.bind(this);\r\n    this.geoLocation = this.geoLocation.bind(this);\r\n\r\n    this.state = {\r\n      cities: CITIES,\r\n      activeCityId: null,\r\n      value: '',\r\n      searchErr: '',\r\n      weatherDataByGeo: null,\r\n      loading: false,\r\n      errGeo: null\r\n    }\r\n  }\r\n\r\n  fetchDataByGeo(latitude, longitude) {\r\n    const APPID = 'ef598dd48091a3a2eb6a63ef6c4d75b2'\r\n    const URL = 'https://api.openweathermap.org/data/2.5/weather?lat=' + \r\n          latitude + '&lon=' + longitude + `&units=metric&lang=ru&APPID=${APPID}`;\r\n\r\n    this.setState({loading: true});\r\n\r\n    fetch(URL).then(response => {\r\n      if (response.ok) {\r\n        return response.json(); \r\n      } else {\r\n        throw response.status\r\n      }\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({\r\n        weatherDataByGeo: data,\r\n        loading: false\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.warn('Данные не были получены, ошибка: ' + err);\r\n    })\r\n  }\r\n\r\n  geoLocation() {\r\n    if(\"geolocation\" in  navigator){\r\n      console.log('navigator');\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          console.log(\"loading\");\r\n          this.fetchDataByGeo(position.coords.latitude, position.coords.longitude)\r\n        },\r\n        (err) => {\r\n          console.log(err.code, err.message);\r\n          this.setState({errGeo: err});\r\n        } //Если данные не получены, то показывать ReqestError на 177 строке\r\n      )\r\n    } else {\r\n      alert('Геолакация не поддерживается вашим браузером.'\r\n            + 'Используйте другой браузер или обновите ваш браузер до последней версии.' )\r\n    }\r\n  }\r\n \r\n  //функция валидации для поиска. Не дает добавить город, если ничего не введенно в поиск\r\n  //так же не дает добавить город, который уже есть в navbar\r\n  validate(value) {\r\n    const {cities} = this.state;\r\n    if (!value) return 'no value';\r\n\r\n    for (let i = 0; i < cities.length; i++) {\r\n      if (cities[i].city === value.trim()) return 'duplicate';\r\n    }\r\n    \r\n    return 'true';\r\n  }\r\n\r\n  handleCityClick(activeCity) {\r\n    this.setState({activeCityId: activeCity.id, errGeo: null})\r\n  }\r\n\r\n  handleInputChange(input) {\r\n    const value = input.value.slice(0,1).toUpperCase() + input.value.slice(1).toLowerCase();\r\n    this.setState({value: value});\r\n  }\r\n\r\n  handleSearchBtn(event) {\r\n    if (event.key === 'Enter' || event.target.id === 'searchBtn') {\r\n      const {cities, value} = this.state;\r\n      const validateResult = this.validate(value);\r\n      const citiesClone = cities.slice();\r\n      \r\n      if (validateResult === 'true') {\r\n        const newCity = {\r\n          id: cities[cities.length-1].id + 1,\r\n          city: value\r\n        }\r\n        citiesClone.push(newCity);\r\n        \r\n        this.setState({\r\n          cities: citiesClone,\r\n          activeCityId: newCity.id, \r\n          value: '',\r\n          searchErr: '',\r\n          errGeo: null\r\n        })\r\n      } else if (validateResult === 'duplicate') {\r\n        this.setState({value: '', searchErr: 'duplicate', errGeo: null})\r\n      } else this.setState({searchErr: 'no value', errGeo: null})\r\n    }\r\n  }\r\n\r\n  handleDeleteCityBtnClick(deleteBtn) {\r\n    const {cities} = this.state;\r\n    const citiesClone = cities.slice();\r\n    \r\n    for (let i = 0; i < citiesClone.length; i++) {\r\n      if (citiesClone[i].id === +deleteBtn.id) citiesClone.splice(i, 1);\r\n    }\r\n    \r\n    this.setState({\r\n      activeCityId: '',\r\n      cities: citiesClone\r\n    });\r\n  }\r\n\r\n  handleLocationClick(e) {\r\n    const {errGeo} = this.state;\r\n    errGeo && this.setState({errGeo: null});\r\n    this.geoLocation();\r\n  }\r\n\r\n  componentDidMount() {\r\n    alert(`\r\n    Для корректной работы приложения необходимо дать разрешение на доступ к геоданным.\r\n    (Нажмите \"разрешить\" в следующем всплывающем окне в правом углу поисковой строки браузера).\r\n    Это необходимо для автоматического определения местоположения и последующего определения\r\n    местоположения при запросе.\r\n    `)\r\n    this.geoLocation();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {cities, weatherDataByGeo} = this.state;\r\n    const citiesClone = cities.slice();\r\n    if (prevState.weatherDataByGeo !== weatherDataByGeo) {\r\n      let duplicate = true;\r\n      for (let i = 0; i < cities.length; i++) {\r\n        if (cities[i].city === weatherDataByGeo.name) {\r\n          duplicate = false;\r\n          this.setState({activeCityId: i+1});\r\n        }\r\n      }\r\n      if (duplicate) {\r\n        const newCity = {\r\n          id: cities[cities.length-1].id + 1,\r\n          city: weatherDataByGeo.name\r\n        }\r\n        citiesClone.push(newCity);\r\n        \r\n        this.setState({\r\n          cities: citiesClone,\r\n          activeCityId: newCity.id\r\n        })\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const {cities, activeCityId, value, searchErr} = this.state;\r\n    const { weatherDataByGeo, loading, errGeo} = this.state;\r\n    let activeCity;\r\n    cities.forEach((item) => item.id === +activeCityId ? activeCity = item.city : '')\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <header className=\"header\">\r\n          <h1 className=\"header__name\">Weather App</h1>\r\n        </header>\r\n        <hr className=\"header__line\"></hr>\r\n        <main className=\"main-wrapper\">\r\n          <AddCity  \r\n            value={value}\r\n            onChange={this.handleInputChange}\r\n            onClick={this.handleSearchBtn}\r\n            searchErr={searchErr}\r\n            onKeyDown={this.handleSearchBtn}\r\n            onLocationClick={this.handleLocationClick}\r\n          />\r\n          <div className='main-info'>\r\n            <Cities \r\n              data={cities} \r\n              onCityClick={this.handleCityClick} \r\n              activeCityId={activeCityId}\r\n              onDeleteCityBtnClick={this.handleDeleteCityBtnClick}\r\n            />\r\n            {\r\n              !loading && !errGeo && (activeCityId || weatherDataByGeo ? \r\n              <WeatherDisplay activeCity={activeCity} weatherDataByGeo={weatherDataByGeo}/> : \r\n              <div className=\"weather-display\">\r\n                <p className=\"weather-display__loader\">Выберите город</p>\r\n              </div>)\r\n            }\r\n            { loading && <Loader /> }\r\n            { errGeo && <RequestError errGeo={errGeo}/>}\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}